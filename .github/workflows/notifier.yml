name: Telegram Notifier Pro
on:
  push:
    branches: [ main, develop ]  # Solo estas ramas importantes
  pull_request:
    types: [opened, closed, reopened, ready_for_review]
  issues:
    types: [opened, closed, reopened, labeled]
  workflow_run:
    workflows: ["CI", "Tests"]  # Solo workflows importantes
    types: [completed]

jobs:
  notify-telegram:
    runs-on: ubuntu-latest
    steps:
      - name: Send Smart Notification
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # Configuraci√≥n mejorada
          REPO_NAME="${{ github.repository }}"
          REPO_URL="${{ github.server_url }}/$REPO_NAME"
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          
          # Mensajes m√°s inteligentes
          case "${{ github.event_name }}" in
            "push")
              COMMIT_MSG=$(echo "${{ github.event.head_commit.message }}" | sed 's/\n/ /g' | cut -c1-80)
              MESSAGE="üöÄ *Nuevo push en [$REPO_NAME]($REPO_URL)*
                      \n‚ñ´Ô∏è *Rama*: \`${GITHUB_REF##*/}\`
                      \n‚ñ´Ô∏è *Autor*: [${{ github.actor }}]($REPO_URL/${{ github.actor }})
                      \n‚ñ´Ô∏è *Commit*: \`$SHORT_SHA\` - \`$COMMIT_MSG\`
                      \n‚ñ´Ô∏è *Archivos cambiados*: $(echo "${{ toJson(github.event.head_commit.modified) }}" | jq length)
                      \nüîç [Ver cambios](${{ github.event.head_commit.url }})"
              ;;

            "pull_request")
              PR_ACTION=${{ github.event.action }}
              case "$PR_ACTION" in
                "opened") EMOJI="üÜï";;
                "closed") 
                  if ${{ github.event.pull_request.merged }}; then EMOJI="‚úÖ"; else EMOJI="‚ùå"; fi;;
                *) EMOJI="üîÄ";;
              esac
              
              MESSAGE="$EMOJI *PR $PR_ACTION: [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})*
                      \n‚ñ´Ô∏è *Por*: [${{ github.actor }}]($REPO_URL/${{ github.actor }})
                      \n‚ñ´Ô∏è *Rama*: \`${{ github.event.pull_request.head.ref }} ‚Üí ${{ github.event.pull_request.base.ref }}\`
                      \n‚ñ´Ô∏è *Estado*: ${{ github.event.pull_request.state }}
                      \n‚ñ´Ô∏è *Cambios*: +${{ github.event.pull_request.additions }} -${{ github.event.pull_request.deletions }}"
              ;;

            "issues")
              ISSUE_LABELS=$(echo "${{ github.event.issue.labels.*.name }}" | jq -r 'join(", ")')
              MESSAGE="‚ö†Ô∏è *Issue ${{ github.event.action }}: [${{ github.event.issue.title }}](${{ github.event.issue.html_url }})*
                      \n‚ñ´Ô∏è *Por*: [${{ github.event.issue.user.login }}]($REPO_URL/${{ github.event.issue.user.login }})
                      \n‚ñ´Ô∏è *Etiquetas*: ${ISSUE_LABELS:-ninguna}
                      \n‚ñ´Ô∏è *Estado*: ${{ github.event.issue.state }}"
              ;;

            "workflow_run")
              WORKFLOW_NAME="${{ github.event.workflow_run.name }}"
              DURATION_MIN=$(( ${{ github.event.workflow_run.run_duration }} / 60 ))
              case "${{ github.event.workflow_run.conclusion }}" in
                "success") EMOJI="‚úîÔ∏è";;
                "failure") EMOJI="‚ùå";;
                "cancelled") EMOJI="üõë";;
                *) EMOJI="‚ÑπÔ∏è";;
              esac
              
              MESSAGE="$EMOJI *Workflow [$WORKFLOW_NAME](${{ github.event.workflow_run.html_url }}) ${{ github.event.workflow_run.conclusion }}*
                      \n‚ñ´Ô∏è *Duraci√≥n*: $DURATION_MIN minutos
                      \n‚ñ´Ô∏è *Commit*: \`$(echo "${{ github.event.workflow_run.head_sha }}" | cut -c1-7)\`
                      \n‚ñ´Ô∏è *Trigger*: ${{ github.event.workflow_run.event }}"
              ;;
          esac

          # Env√≠a el mensaje mejor formateado
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
            -d chat_id="$CHAT_ID" \
            -d text="$MESSAGE" \
            -d parse_mode="Markdown" \
            -d disable_web_page_preview="true"