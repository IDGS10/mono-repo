version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres-primary
    restart: unless-stopped
    
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-production_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      PGDATA: /var/lib/postgresql/data/pgdata
      
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
      - ./config/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./config/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./scripts/init:/docker-entrypoint-initdb.d:ro
      - postgres_backups:/backups
      - postgres_archive:/var/lib/postgresql/archive
    
    # Simplified command for Windows compatibility
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c hba_file=/etc/postgresql/pg_hba.conf
      -c log_destination=stderr
      -c logging_collector=off
    
    # More lenient health check for Windows
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-production_db} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    
    networks:
      - postgres_network

  # Start exporter only after postgres is confirmed healthy
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-production_db}?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - postgres_network
    profiles:
      - monitoring

  # Optional: PgBouncer (can be started separately)
  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    container_name: pgbouncer
    restart: unless-stopped
    environment:
      DATABASES_HOST: postgres
      DATABASES_PORT: 5432
      DATABASES_USER: ${POSTGRES_USER:-postgres}
      DATABASES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASES_DBNAME: ${POSTGRES_DB:-production_db}
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 100
      DEFAULT_POOL_SIZE: 25
    ports:
      - "6432:6432"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - postgres_network
    profiles:
      - pooling

volumes:
  postgres_data:
    driver: local
  postgres_logs:
    driver: local
  postgres_backups:
    driver: local
  postgres_archive:
    driver: local

networks:
  postgres_network:
    driver: bridge